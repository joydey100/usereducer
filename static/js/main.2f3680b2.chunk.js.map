{"version":3,"sources":["component/Modal.jsx","component/UseReducer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Modal","modalContent","closeModal","useEffect","setTimeout","className","initial","person","isModalOpen","reducer","state","action","type","payload","newItem","filter","id","UseReducer","useState","name","setname","useRefContainer","useRef","useReducer","dispatch","current","focus","console","log","onSubmit","e","preventDefault","Date","getTime","toString","value","onChange","target","ref","map","onClick","removeItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAuBeA,EApBD,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,WAa1B,OAXAC,qBAAU,WAIN,OAHAC,YAAW,WACPF,MACD,KACI,WACHE,YAAW,WACXF,MACD,QAEJ,IAGC,qBAAKG,UAAU,QAAf,SACI,mCAAMJ,EAAN,UCfRK,EAAU,CACVC,OAAQ,GACRC,aAAc,EACdP,aAAc,IAGdQ,EAAU,SAACC,EAAOC,GAClB,OAAOA,EAAOC,MACV,IAAK,WACD,OAAO,2BACDF,GADN,IAEIH,OAAO,GAAD,mBAAMG,EAAMH,QAAZ,CAAoBI,EAAOE,UACjCL,aAAc,EACdP,aAAc,eAElB,IAAK,aACD,OAAO,2BACAS,GADP,IAEKF,aAAc,EACdP,aAAc,yBAEnB,IAAK,cACD,kCACOS,GADP,IAEIF,aAAc,IAElB,IAAK,cACD,IAAIM,EAAUJ,EAAMH,OAAOQ,QAAO,SAAAR,GAAM,OAAIA,EAAOS,KAAOL,EAAOE,WACjE,kCACOH,GADP,IAEIH,OAAQO,EACRN,aAAa,EACbP,aAAc,iBAE1B,QACI,OAAOS,IAmEZO,EA7DI,WACf,MAAsBC,mBAAS,IAA/B,mBAAKC,EAAL,KAAWC,EAAX,KAEIC,EAAkBC,iBAAO,MAE7B,EAAwBC,qBAAWd,EAASH,GAA5C,mBAAKI,EAAL,KAAYc,EAAZ,KAEArB,qBAAU,WACNkB,EAAgBI,QAAQC,UACzB,IA2BH,OADAC,QAAQC,IAAIlB,GAER,sBAAKL,UAAU,YAAf,UACKK,EAAMF,aAAe,cAAC,EAAD,CAAOP,aAAcS,EAAMT,aAAcC,WAdtD,WACjBsB,EAAS,CAACZ,KAAM,mBAcR,uBAAMiB,SA3BK,SAACC,GAEhB,GADAA,EAAEC,iBACCZ,EAAK,CACJ,IAAIL,EAAU,CAACE,IAAI,IAAIgB,MAAOC,UAAUC,WAAYf,QACpDK,EAAS,CAACZ,KAAM,WAAYC,QAASC,IACzCM,EAAQ,SAEJI,EAAS,CAACZ,KAAM,gBAoBhB,UACI,qBAAKP,UAAU,aAAf,SACI,uBAAOO,KAAK,OAAOO,KAAK,OAAOgB,MAAOhB,EAAMiB,SAAU,SAACN,GAAD,OAAQV,EAAQU,EAAEO,OAAOF,QAAQG,IAAKjB,MAEhG,wBAAQhB,UAAU,MAAMO,KAAK,SAA7B,yBAIAF,EAAMH,OAAOgC,KAAI,SAAAhC,GACb,IAAKS,EAAYT,EAAZS,GAAIG,EAAQZ,EAARY,KACT,OACI,sBAAcd,UAAU,OAAxB,UACI,mCAAMc,EAAN,OACA,mBAAGqB,QAAS,kBAxBvB,SAACxB,GACdQ,EAAS,CAACZ,KAAM,cAAeC,QAASG,IAuBEyB,CAAWzB,IAA7B,wBAFMA,UCnFnB0B,MARf,WACE,OACE,mCACA,cAAC,EAAD,OCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2f3680b2.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\r\n\r\n\r\nconst Modal = ({modalContent, closeModal}) => {\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            closeModal()\r\n        }, 3000)\r\n        return () => {\r\n            setTimeout(() => {\r\n            closeModal()\r\n        }, 3000)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <h4> {modalContent} </h4>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import React, { useEffect, useReducer, useRef, useState } from 'react'\r\nimport Modal from './Modal'\r\n\r\nlet initial = {\r\n    person: [],\r\n    isModalOpen : false,\r\n    modalContent: \"\"\r\n}\r\n\r\nlet reducer = (state, action) => {\r\n    switch(action.type){\r\n        case \"ADD_ITEM\":\r\n            return {\r\n               ...state,\r\n                person: [...state.person, action.payload],\r\n                isModalOpen : true,\r\n                modalContent: \"Item Added\"\r\n            }\r\n            case \"ALERT_ITEM\":\r\n                return {\r\n                    ...state,\r\n                     isModalOpen : true,\r\n                     modalContent: \"Please Enter a Value\"                    \r\n                }\r\n                case \"CLOSE_MODAL\":\r\n                    return{\r\n                        ...state,\r\n                        isModalOpen : false\r\n                    }\r\n                    case \"REMOVE_ITEM\":\r\n                        let newItem = state.person.filter(person => person.id !== action.payload)                       \r\n                        return{\r\n                            ...state,\r\n                            person: newItem,\r\n                            isModalOpen: true,\r\n                            modalContent: \"Item Removed\" \r\n                        }\r\n                default:\r\n                    return state\r\n    }\r\n}\r\n\r\n\r\n\r\nconst UseReducer = () => {\r\n    let [name, setname] = useState(\"\")\r\n    // useref\r\n    let useRefContainer = useRef(null)\r\n    // useReducer hook\r\n    let [state, dispatch] = useReducer(reducer, initial)\r\n    // useEffect\r\n    useEffect(() => {\r\n        useRefContainer.current.focus()\r\n    }, [])\r\n\r\n    // Submit\r\n    let handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(name){\r\n            let newItem = {id: new Date().getTime().toString(), name}\r\n            dispatch({type: \"ADD_ITEM\", payload: newItem})            \r\n        setname(\"\")\r\n        }else{\r\n            dispatch({type: \"ALERT_ITEM\"})\r\n        }       \r\n    }\r\n\r\n    // Modal close\r\n    let closeModal = () => {\r\n    dispatch({type: \"CLOSE_MODAL\"})\r\n}\r\n\r\nlet removeItem = (id) => {\r\n    dispatch({type: \"REMOVE_ITEM\", payload: id})\r\n}\r\n\r\n\r\n\r\n\r\n    console.log(state)\r\n    return (\r\n        <div className=\"container\">\r\n            {state.isModalOpen && <Modal modalContent={state.modalContent} closeModal= {closeModal}/>}\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-field\">\r\n                    <input type=\"text\" name=\"name\" value={name} onChange={(e) =>  setname(e.target.value)} ref={useRefContainer} />\r\n                </div>\r\n                <button className=\"btn\" type=\"submit\"> Submit </button>\r\n            </form>\r\n\r\n            {\r\n                state.person.map(person => {\r\n                    let {id, name} = person\r\n                    return (\r\n                        <div key={id} className=\"item\">\r\n                            <h4> {name} </h4>\r\n                            <p onClick={() => removeItem(id)}> Remove </p>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseReducer\r\n","import React from 'react'\nimport UseReducer from './component/UseReducer'\n\nfunction App() {\n  return (\n    <> \n    <UseReducer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}